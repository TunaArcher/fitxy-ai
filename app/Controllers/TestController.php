<?php

namespace App\Controllers;

use App\Libraries\ChatGPT;
use App\Models\MessageModel;
use App\Models\MessageRoomModel;
use App\Models\UserModel;

class TestController extends BaseController
{
    private MessageModel $messageModel;
    private MessageRoomModel $messageRoomModel;

    public function __construct()
    {
        $this->messageModel = new MessageModel();
        $this->messageRoomModel = new MessageRoomModel();
    }

    public function index()
    {
        $chatGPT = new ChatGPT(['GPTToken' => getenv('GPT_TOKEN')]);
        $question = '‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏µ‡πâ‡∏â‡∏±‡∏ô‡∏ñ‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏≠‡∏∞‡πÑ‡∏£‡∏ô‡∏∞';
        $messageSetting = '‡∏ö‡∏ó‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ô‡∏µ‡πâ‡∏°‡∏∏‡πà‡∏á‡πÄ‡∏ô‡πâ‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÅ‡∏•‡∏∞‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡∏¢‡∏∏‡∏Ñ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏â‡∏±‡∏ô‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏≤‡∏£‡∏∑‡∏≠‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡πÉ‡∏î‡πÉ‡∏ô‡∏á‡∏≤‡∏ô‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÅ‡∏•‡∏∞‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏µ 2024? ‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå CAD ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ö‡∏ö‡∏à‡∏≥‡∏•‡∏≠‡∏á 3 ‡∏°‡∏¥‡∏ï‡∏¥ ‡∏î‡πâ‡∏ß‡∏¢ BIM ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå IoT ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ã‡∏ï‡πå‡∏Å‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á?';
        $messageRoom = $this->messageRoomModel->getMessageRoomByID('121');
        $messages = $this->messageModel->getHistoryMessageByRoomID($messageRoom->id, 4);

        $fileNames = 'https://autoconx.sgp1.digitaloceanspaces.com/uploads/img/line/line_67a5f8154d0fc.jpg,https://autoconx.sgp1.digitaloceanspaces.com/uploads/img/line/line_67a5f83269382.jpg,';

        $test = array_map(function ($fileName) {
            return [
                'type' => 'image_url',
                'image_url' => ['url' => trim($fileName)]
            ];
        }, explode(',', $fileNames));

        px($test);

        echo $chatGPT->askChatGPT($messageRoom->id, $question, $messageSetting);
    }

    public function filterMessage()
    {

        $inputText = "
        
        ‡∏Ç‡πâ‡∏≤‡∏ß‡∏°‡∏±‡∏ô‡πÑ‡∏Å‡πà
- ‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏™‡∏°‡∏´‡∏•‡∏±‡∏Å: ‡∏Ç‡πâ‡∏≤‡∏ß‡∏°‡∏±‡∏ô, ‡πÑ‡∏Å‡πà‡∏ï‡πâ‡∏°, ‡πÅ‡∏ï‡∏á‡∏Å‡∏ß‡∏≤, ‡∏ã‡∏≠‡∏™‡∏Ç‡∏¥‡∏á
- ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô: 600 ‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà

‡∏ã‡∏∏‡∏õ‡πÑ‡∏Å‡πà
- ‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏™‡∏°‡∏´‡∏•‡∏±‡∏Å: ‡∏ô‡πâ‡∏≥‡∏ã‡∏∏‡∏õ‡πÑ‡∏Å‡πà, ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏®
- ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô: 80 ‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà

‡∏™‡∏£‡∏∏‡∏õ ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏°‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£: 680 ‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà

‡∏ú‡∏°‡∏•‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö !! ‡∏≠‡∏£‡πà‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏¢‡πà‡∏≠‡∏¢‡πÄ‡∏î‡∏¥‡∏ô‡∏™‡∏±‡∏Å‡∏£‡∏≠‡∏ö‡∏™‡∏≠‡∏á‡∏£‡∏≠‡∏ö‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö! üòÑ

```json
{\"totalcal\": 680}
```
        ";

         // ‡∏•‡∏ö json ‡πÅ‡∏•‡∏∞ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° 
         $cleanText = preg_replace('/```json|```/', '', $inputText); 
         $cleanText = trim($cleanText); // ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô

        // ‡πÉ‡∏ä‡πâ regex ‡πÅ‡∏¢‡∏Å JSON ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤
        preg_match('/\{.*\}/s', $cleanText, $jsonMatch);
        $json = !empty($jsonMatch) ? json_decode($jsonMatch[0], true) : null;

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏°‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£" ‡πÅ‡∏•‡∏∞ JSON ‡∏ó‡∏µ‡πà‡∏°‡∏µ key "totalcal" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (strpos($cleanText, '‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏°‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£') !== false && is_array($json) && isset($json['totalcal'])) {
            // ‡πÅ‡∏¢‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏° JSON
            $message = trim(str_replace($jsonMatch[0], '', $cleanText));
        } else {
            // ‡πÄ‡∏Å‡πá‡∏ö‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏á‡πÉ‡∏ô $message ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ $json ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤
            $message = $cleanText;
            $json = [];
        }

        // // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        // echo "Message: \n$message\n\n";
        // echo "JSON: \n" . json_encode($json, JSON_PRETTY_PRINT) . "\n";

        px([
            'repyleMessage' => $message,
            'json' => $json
        ]);

        return [
            'repyleMessage' => $message,
            'json' => $json
        ];
    }

    public function test()
    {
        // ‡∏•‡∏ö json ‡πÅ‡∏•‡∏∞ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° 
        $cleanText = preg_replace('/json|/', '', $inputText); 
        $cleanText = trim($cleanText); // ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô

        // ‡πÉ‡∏ä‡πâ regex ‡πÅ‡∏¢‡∏Å JSON ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤ 
        preg_match('/{.*}/s', $cleanText, $jsonMatch); 
        $json = !empty($jsonMatch) ? json_decode($jsonMatch[0], true) : null;

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏°‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£" ‡πÅ‡∏•‡∏∞ JSON ‡∏ó‡∏µ‡πà‡∏°‡∏µ key "totalcal" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà 
        if (strpos($cleanText, '‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏°‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£') !== false && is_array($json) && isset($json['totalcal'])) { 
            // ‡πÅ‡∏¢‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏° JSON 
            $message = trim(str_replace($jsonMatch[0], '', $cleanText)); 
        } else { 
            // ‡πÄ‡∏Å‡πá‡∏ö‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏á‡πÉ‡∏ô $message ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ $json ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤ 
            $message = $cleanText; 
            $json = []; 
            }

        // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå 
        echo "Message: \n$message\n\n"; echo "JSON: \n" . json_encode($json, JSON_PRETTY_PRINT) . "\n";
    }
}
